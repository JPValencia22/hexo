<%- partial('_partial/article-full', {item: page}) %>

<!-- Botones de Editar y Eliminar -->
<div class="button-container">
  <button onclick="editPost('<%= page.path %>')" class="edit-button">
    Editar
  </button>
  <button onclick="deletePost('<%= page.path %>')" class="delete-button">
    Eliminar
  </button>
</div>

<!-- Modal para editar el post -->
<div id="editModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>Editar Post</h2>
    <textarea
      id="editContent"
      rows="10"
      cols="50"
      placeholder="Ingrese el nuevo contenido aquí..."
    ></textarea
    ><br />
    <button id="saveButton">Guardar</button>
  </div>
</div>

<script>
  // Función para desplazarse hacia arriba
function scrollToTop() {
  window.scrollTo({ top: 0, behavior: "smooth" });
}

// Función para abrir el modal y cargar el contenido para editar
function editPost(postPath) {
  const postName = postPath.split('/').filter(Boolean).pop(); // Obtener el nombre del post

  // Mostrar el modal
  const modal = document.getElementById('editModal');
  modal.style.display = 'block';

  // Cuando el usuario haga clic en el botón de guardar
  document.getElementById('saveButton').onclick = function () {
    const newContent = document.getElementById('editContent').value; // Obtener el contenido del textarea

    if (newContent) {
      // Hacer una petición PUT para editar el post
      fetch('http://localhost:3000/edit-post', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ postName: postName, content: newContent }),
      })
        .then(response => response.text())
        .then(data => {
          alert(data); // Mostrar el mensaje del servidor
          window.location.reload(); // Recargar la página tras la edición
        })
        .catch(error => {
          console.error('Error al editar el post:', error);
          alert('Error al editar el post.');
        });
      
      // Cerrar el modal
      modal.style.display = 'none';
    }
  };
}

// Cerrar el modal al hacer clic en la "X"
document.querySelector('.close').onclick = function () {
  document.getElementById('editModal').style.display = 'none';
};

// Cerrar el modal si el usuario hace clic fuera del contenido
window.onclick = function (event) {
  const modal = document.getElementById('editModal');
  if (event.target == modal) {
    modal.style.display = 'none';
  }
};

// Función para eliminar un post
function deletePost(postPath) {
  const postName = postPath.split('/').filter(Boolean).pop(); // Extraer la última parte de la URL
  const deleteUrl = `http://localhost:3000/delete/${postName}`; // Ruta del backend para eliminar el archivo

  if (confirm('¿Estás seguro de que deseas eliminar este post?')) {
    fetch(deleteUrl, { method: 'DELETE' })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Post eliminado con éxito');
          window.location.href = "http://localhost:4000";
        } else {
          alert('Error al eliminar el post: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Error al eliminar el post:', error);
        alert('Error al eliminar el post');
      });
  }
}
</script>

<style>
  /* Estilo para centrar los botones dentro del div */
  .button-container {
    display: flex; /* Hace que los botones se alineen en fila */
    justify-content: center; /* Centra los botones horizontalmente */
    gap: 10px; /* Espacio entre los botones */
    padding: 20px; /* Añade un poco de espacio alrededor de los botones */
  }

  /* Estilo general para los botones */
  button {
    padding: 10px 20px; /* Espaciado interno para los botones */
    font-size: 16px; /* Tamaño de la fuente */
    border: none; /* Quita los bordes predeterminados */
    border-radius: 5px; /* Bordes redondeados */
    cursor: pointer; /* Cambia el cursor a una mano cuando se pasa sobre el botón */
    transition: background-color 0.3s ease; /* Efecto suave al cambiar de color */
  }

  /* Estilo específico para el botón de editar */
  .edit-button {
    background-color: #4caf50; /* Color de fondo verde */
    color: white; /* Color de texto blanco */
  }

  .edit-button:hover {
    background-color: #45a049; /* Color de fondo más oscuro al pasar el ratón */
  }

  /* Estilo específico para el botón de eliminar */
  .delete-button {
    background-color: #f44336; /* Color de fondo rojo */
    color: white; /* Color de texto blanco */
  }

  .delete-button:hover {
    background-color: #da190b; /* Color de fondo más oscuro al pasar el ratón */
  }

  /* Estilos para el modal */
  .modal {
    display: none; /* Oculto por defecto */
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4); /* Color de fondo semi-transparente */
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px; /* Ancho máximo del modal */
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  textarea {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    margin-top: 10px;
  }

  #saveButton {
    background-color: #4caf50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  #saveButton:hover {
    background-color: #45a049;
  }
</style>
